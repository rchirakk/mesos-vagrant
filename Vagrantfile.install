# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  #config.vm.provision :shell, path: "bootstrap.sh"
  config.vm.provider "virtualbox" do |vb|
    vb.cpus = 4
    vb.memory = 8192
  end

$bootstrap = <<BOOTSTRAP
echo "installing packages ..."
apt-get update
apt-get install -y tar wget autoconf libtool openjdk-7-jdk \
           build-essential python-dev libcurl4-nss-dev libsasl2-dev \
           libsasl2-modules maven libapr1-dev libsvn-dev zookeeper zookeeperd
sudo add-apt-repository ppa:webupd8team/java -y
sudo apt-get update -y
echo "oracle-java8-installer shared/accepted-oracle-license-v1-1 select true" \
     | /usr/bin/debconf-set-selections
apt-get install -y oracle-java8-installer oracle-java8-set-default
apt-get -y install git docker.io
echo "deb https://dl.bintray.com/sbt/debian /" | sudo tee -a \
       /etc/apt/sources.list.d/sbt.list
apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv  \
       2EE0EA64E40A89B84B2DF73499E82A75642AC823
sudo apt-get update
sudo apt-get install sbt
mkdir -p /var/lib/mesos
chown -R vagrant:vagrant /var/lib/mesos
groupadd docker
gpasswd -a vagrant docker
service docker restart
BOOTSTRAP

$build = <<BUILD
echo "building packages ..."
git clone https://git-wip-us.apache.org/repos/asf/mesos.git
git clone https://github.com/mesosphere/marathon.git
cd marathon && sbt assembly
cd -
wget https://github.com/mesos/chronos/archive/2.4.0.tar.gz
tar xvfz 2.4.0.tar.gz
ln -s chronos-2.4.0 chronos
mkdir mesos/build
cd mesos && ./bootstrap
cd  ..
cd mesos/build && ../configure && make -j4 V=0
BUILD

  # server
  config.vm.define "mesos-base" do |ms1|
     ms1.vm.box = "ubuntu/trusty64"
     ms1.vm.provision :shell, inline: $bootstrap
     ms1.vm.provision :shell, privileged:false, inline: $build
  end

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   sudo apt-get update
  #   sudo apt-get install -y apache2
  # SHELL
end
